{% set name = "OpenMS" %}
{% set version = "2.6.0dev" %}
package:
  name: {{ name|lower  }}-meta
  version: {{ version  }}

source:
  git_url: https://github.com/OpenMS/OpenMS.git
  git_rev: develop
  patches:
    - apple_pyoms_nofixup.patch
    - init.py.patch
    - MANIFEST.in.patch

build:
  number: 0

# Try this when building with GUI
#extra:
#  container:
#    extended-base: True

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - autoconf
    - automake
  host:
    # openms-general
    - llvm-openmp # [osx]
    - zlib
    - libtool
    - xerces-c
    - boost-cpp 1.70.0
    - eigen
    - glpk
    - hdf5
    - bzip2
    - qt >=5.5
    - libsvm
    - seqan-library ==1.4.2
    - coinmp
    - sqlite

    # Unfortunately we can't include a dependency on the subpackages here
    # (probably bc of the jinja function in the compiler; but we need it
    # since this meta build prepares all the other builds and saves time)
    # Instead, we create an openms-full package later.
    
test:
  commands:
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]

outputs:
  - name: libopenms
    version: {{ version }}
    script: package_libopenms.sh
    requirements:
        # build requirements should be loaded from the meta package already.
        # But since the other packages depend on its run_exports
        # We want to make sure that the versions of the dependencies used are the same as above
        build:
          - {{ compiler('cxx') }}
          - cmake
          - autoconf
          - automake
        host:
          # openms-general
          - llvm-openmp # [osx]
          - zlib
          - libtool
          - xerces-c
          - boost-cpp 1.70.0
          - eigen
          - glpk
          - hdf5
          - bzip2
          - qt >=5.5
          - libsvm
          - seqan-library ==1.4.2
          - coinmp
          - sqlite
    build:
      run_exports:
          - {{ pin_compatible('llvm-openmp', max_pin='x.x') }} # [osx]
          - {{ pin_compatible('zlib', max_pin='x.x') }}
          - {{ pin_compatible('xerces-c', max_pin='x.x') }}
          - {{ pin_compatible('boost-cpp', max_pin='x.x') }}
          - {{ pin_compatible('eigen', max_pin='x.x') }}
          - {{ pin_compatible('glpk', max_pin='x.x') }}
          - {{ pin_compatible('hdf5', max_pin='x.x') }}
          - {{ pin_compatible('bzip2', max_pin='x.x') }}
          - {{ pin_compatible('qt', max_pin='x.x') }}
          - {{ pin_compatible('libsvm', max_pin='x.x') }}
          - {{ pin_compatible('coinmp', max_pin='x.x') }}
          - {{ pin_compatible('sqlite', max_pin='x.x') }}
          - libopenms {{ version }}

  - name: openms
    version: {{ version }}
    script: package_openms-tools.sh
    requirements:
      # TODO not sure if build reqs are needed
      build:
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage('libopenms', exact=True) }}
      # conda apparently does not support run_exports in subpackages yet. https://github.com/conda/conda-build/issues/3478
      # so specify everything again, such that EXACTLY the same versions are used! Current problem is boost.
      # In the meta build it uses e.g. 1.72 but the tests for the tools suddenly choose
      # I could not get the "resolved_packages" jinja function to gather dependencies from other subpackages.
        - llvm-openmp # [osx]
        - zlib
        - libtool
        - xerces-c
        - boost-cpp 1.70.0
        - eigen
        - glpk
        - hdf5
        - bzip2
        - qt >=5.5
        - libsvm
        - seqan-library ==1.4.2
        - coinmp
        - sqlite
      run:
        - {{ pin_subpackage('libopenms', exact=True) }}
        - {{ pin_compatible('llvm-openmp', max_pin='x.x') }} # [osx]
        - {{ pin_compatible('zlib', max_pin='x.x') }}
        - {{ pin_compatible('xerces-c', max_pin='x.x') }}
        - {{ pin_compatible('boost-cpp', max_pin='x.x') }}
        - {{ pin_compatible('eigen', max_pin='x.x') }}
        - {{ pin_compatible('glpk', max_pin='x.x') }}
        - {{ pin_compatible('hdf5', max_pin='x.x') }}
        - {{ pin_compatible('bzip2', max_pin='x.x') }}
        - {{ pin_compatible('qt', max_pin='x.x') }}
        - {{ pin_compatible('libsvm', max_pin='x.x') }}
        - {{ pin_compatible('coinmp', max_pin='x.x') }}
        - {{ pin_compatible('sqlite', max_pin='x.x') }}
    test:
      commands:
        - OPENMS_DATA_PATH=${PREFIX}/share/OpenMS/ ${PREFIX}/bin/FileMerger --help  


about:
  home: https://github.com/OpenMS/OpenMS
  license: BSD
  license_file: LICENSE
  summary: OpenMS is an open-source software C++ library for LC-MS data management and analyses

extra:
  skip-lints:
    - build_number_needs_reset  # our linter has some issues with multi-package recipes as it seems
    - missing_hash
    - uses_vcs_url
  identifiers:
    - biotools:openms
    - doi:10.1038/nmeth.3959
